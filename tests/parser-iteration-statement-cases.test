@test("It should parse while loop")
@given("file")
int main() {
    int i;
    i = 0;
    while(i < 10) {
        i = i + 1;
    }
}
@whenRun("./bin/parser-tester")
@expectOutput("stdout")
FunctionDefinition: 'main' {type: 'int'}
|
+-> CompoundStatement
    |
    +-> VariableDeclaration: 'i' {type: 'int'}
    |
    +-> ExpressionStatement
    |   |
    |   +-> AssignmentExpression: '='
    |       |
    |       +-> Variable: 'i' {type: 'int'}
    |       |
    |       +-> IntegerConstant: '0' {type: 'int'}
    |
    +-> WhileStatement
        |
        +-> (condition) RelationalExpression: '<' {type: 'int'}
        |   |
        |   +-> Variable: 'i' {type: 'int'}
        |   |
        |   +-> IntegerConstant: '10' {type: 'int'}
        |
        +-> (body) CompoundStatement
            |
            +-> ExpressionStatement
                |
                +-> AssignmentExpression: '='
                    |
                    +-> Variable: 'i' {type: 'int'}
                    |
                    +-> AdditiveExpression: '+' {type: 'int'}
                        |
                        +-> Variable: 'i' {type: 'int'}
                        |
                        +-> IntegerConstant: '1' {type: 'int'}

@endtest

@test("It should parse while with empty statement")
@given("file")
int main() {
    int i;
    i = 0;
    while(i < 10);
}
@whenRun("./bin/parser-tester")
@expectOutput("stdout")
FunctionDefinition: 'main' {type: 'int'}
|
+-> CompoundStatement
    |
    +-> VariableDeclaration: 'i' {type: 'int'}
    |
    +-> ExpressionStatement
    |   |
    |   +-> AssignmentExpression: '='
    |       |
    |       +-> Variable: 'i' {type: 'int'}
    |       |
    |       +-> IntegerConstant: '0' {type: 'int'}
    |
    +-> WhileStatement
        |
        +-> (condition) RelationalExpression: '<' {type: 'int'}
        |   |
        |   +-> Variable: 'i' {type: 'int'}
        |   |
        |   +-> IntegerConstant: '10' {type: 'int'}
        |
        +-> (body) ExpressionStatement: {empty expression}

@endtest

@test("It should parse while with simple expression")
@given("file")
int main() {
    int i;
    i = 0;
    while(i < 10)
        i = i + 1;
}
@whenRun("./bin/parser-tester")
@expectOutput("stdout")
FunctionDefinition: 'main' {type: 'int'}
|
+-> CompoundStatement
    |
    +-> VariableDeclaration: 'i' {type: 'int'}
    |
    +-> ExpressionStatement
    |   |
    |   +-> AssignmentExpression: '='
    |       |
    |       +-> Variable: 'i' {type: 'int'}
    |       |
    |       +-> IntegerConstant: '0' {type: 'int'}
    |
    +-> WhileStatement
        |
        +-> (condition) RelationalExpression: '<' {type: 'int'}
        |   |
        |   +-> Variable: 'i' {type: 'int'}
        |   |
        |   +-> IntegerConstant: '10' {type: 'int'}
        |
        +-> (body) ExpressionStatement
            |
            +-> AssignmentExpression: '='
                |
                +-> Variable: 'i' {type: 'int'}
                |
                +-> AdditiveExpression: '+' {type: 'int'}
                    |
                    +-> Variable: 'i' {type: 'int'}
                    |
                    +-> IntegerConstant: '1' {type: 'int'}

@endtest
